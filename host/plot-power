#!/usr/bin/python

import numpy as np
import matplotlib.pyplot as pl
from matplotlib import mlab

import argparse

detrend_modes = {
    'linear': mlab.detrend_linear,
    'mean': mlab.detrend_mean,
    'none': mlab.detrend_none,
}

parser = argparse.ArgumentParser()
parser.add_argument('file', type=argparse.FileType('r'))
parser.add_argument('-d', '--detrend', type=str, default='mean', help='De-trending mode (one of %s)' % ', '.join(detrend_modes))
parser.add_argument('-m', '--max-lag', type=int, default=2, help='Maximum lag in seconds')
args = parser.parse_args()

a = np.genfromtxt(args.file, dtype=None, names='time,power')
pl.subplot(211)
pl.plot(a['time'], a['power'] / 1e-6)
pl.xlabel('time (seconds)')
pl.ylabel('power (microwatts)')
pl.autoscale(tight=True, axis='x')

pl.subplot(212)
pl.axhline(0, c='k')
dt = (a['time'][-1] - a['time'][0]) / len(a)
detrended = detrend_modes[args.detrend](a['power'])
nlags = args.max_lag // dt
corr = np.correlate(detrended, detrended, mode=2)
corr /= np.dot(detrended, detrended)
corr = corr[len(a) - 1 - nlags : len(a) + nlags]
lags = dt * np.arange(-nlags, nlags+1)
pl.vlines(lags, 0, corr)
pl.xlabel('lag (seconds)')
pl.ylabel('autocorrelation\ndetrend=%s' % args.detrend)
pl.xlim(-args.max_lag, args.max_lag)
pl.show()
